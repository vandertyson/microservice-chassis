##################################################################################################
# jaeger-collector Service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: jaeger-production-collector
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: collector
  namespace: microservices-chassis
spec:
  ports:
  - name: jaeger-collector-tchannel
    port: 14267
    protocol: TCP
    targetPort: 14267
  - name: jaeger-collector-http
    port: 14268
    protocol: TCP
    targetPort: 14268
  - name: jaeger-collector-zipkin
    port: 9411
    protocol: TCP
    targetPort: 9411
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: collector
  type: ClusterIP

---
##################################################################################################
# jaeger-collector Deployment
##################################################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-collector
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: collector
  namespace: microservices-chassis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: collector
  # strategy:
  #   type: Recreate
  template:
    metadata:
      labels:
        app: jaeger
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: collector
      # annotations:
      #   prometheus.io/scrape: "true"
      #   prometheus.io/port: "14268"
    spec:
      containers:
      - image: docker-registry:4000/jaegertracing/jaeger-collector:1.20.0
        name: jaeger-collector
        args: ["--config-file=/conf/collector.yaml"]
        ports:
        - containerPort: 14267
          protocol: TCP
        - containerPort: 14268
          protocol: TCP
        - containerPort: 9411
          protocol: TCP
        readinessProbe:
          httpGet:
            path: "/"
            port: 14269
        volumeMounts:
        - name: jaeger-configuration-volume
          mountPath: /conf
        env:
        - name: SPAN_STORAGE_TYPE
          valueFrom:
            configMapKeyRef:
              name: jaeger-configuration
              key: span-storage-type
        resources:
          requests:
            cpu: 1000m
            memory: 50Mi
          limits:
            cpu: 1000m
            memory: 900Mi
      volumes:
        - configMap:
            name: jaeger-configuration
            items:
              - key: collector
                path: collector.yaml
          name: jaeger-configuration-volume

# ---
##################################################################################################
# jaeger-collector Service
##################################################################################################
# - apiVersion: v1
#   kind: Service
#   metadata:
#     name: zipkin
#     labels:
#       app: jaeger
#       app.kubernetes.io/name: jaeger
#       app.kubernetes.io/component: zipkin
#   spec:
#     ports:
#     - name: jaeger-collector-zipkin
#       port: 9411
#       protocol: TCP
#       targetPort: 9411
#     selector:
#       app.kubernetes.io/name: jaeger
#       app.kubernetes.io/component: collector
#     type: ClusterIP

---
##################################################################################################
# jaeger-query Service
##################################################################################################
apiVersion: v1
kind: Service
metadata:
  name: jaeger-production-query
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: query
  namespace: microservices-chassis
spec:
  ports:
  - name: jaeger-query
    port: 80
    targetPort: 16686
    protocol: TCP
    nodePort: 31706
  selector:
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: query
  type: NodePort

---
##################################################################################################
# jaeger-query Deployment
##################################################################################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jaeger-query
  labels:
    app: jaeger
    app.kubernetes.io/name: jaeger
    app.kubernetes.io/component: query
  namespace: microservices-chassis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jaeger
      app.kubernetes.io/name: jaeger
      app.kubernetes.io/component: query
  # strategy:
  #   type: Recreate
  template:
    metadata:
      labels:
        app: jaeger
        app.kubernetes.io/name: jaeger
        app.kubernetes.io/component: query
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "16686"
    spec:
      containers:
      - image: docker-registry:4000/jaegertracing/jaeger-query:1.20.0
        name: jaeger-query
        args: ["--config-file=/conf/query.yaml"]
        ports:
        - containerPort: 16686
          protocol: TCP
        readinessProbe:
          httpGet:
            path: "/"
            port: 16687
        volumeMounts:
        - name: jaeger-configuration-volume
          mountPath: /conf
        env:
        - name: JAEGER_DISABLED
          value: "true"
        - name: SPAN_STORAGE_TYPE
          valueFrom:
            configMapKeyRef:
              name: jaeger-configuration
              key: span-storage-type
        resources:
          requests:
            cpu: 1000m
            memory: 500Mi
          limits:
            cpu: 10000m
            memory: 5Gi
      volumes:
        - configMap:
            name: jaeger-configuration
            items:
              - key: query
                path: query.yaml
          name: jaeger-configuration-volume

# ---
##################################################################################################
# jaeger-agent DaemonSet
##################################################################################################
# apiVersion: extensions/v1beta1
# kind: DaemonSet
# metadata:
#   name: jaeger-agent
#   labels:
#     app: jaeger
#     app.kubernetes.io/name: jaeger
#     app.kubernetes.io/component: agent
# spec:
#   template:
#     metadata:
#       labels:
#         app: jaeger
#         app.kubernetes.io/name: jaeger
#         app.kubernetes.io/component: agent
#       annotations:
#         prometheus.io/scrape: "true"
#         prometheus.io/port: "5778"
#     spec:
#       containers:
#       - name: jaeger-agent
#         image: jaegertracing/jaeger-agent:1.9.0
#         args: ["--config-file=/conf/agent.yaml"]
#         volumeMounts:
#         - name: jaeger-configuration-volume
#           mountPath: /conf
#         ports:
#         - containerPort: 5775
#           protocol: UDP
#         - containerPort: 6831
#           protocol: UDP
#         - containerPort: 6832
#           protocol: UDP
#         - containerPort: 5778
#           protocol: TCP
#       hostNetwork: true
#       dnsPolicy: ClusterFirstWithHostNet
#       volumes:
#         - configMap:
#             name: jaeger-configuration
#             items:
#               - key: agent
#                 path: agent.yaml
#           name: jaeger-configuration-volume